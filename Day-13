1.Given an integer array nums, find the 
subarray
 with the largest sum, and return its sum.

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: The subarray [4,-1,2,1] has the largest sum 6.

code:
class Solution {
    public int maxSubArray(int[] nums) {
        int n = nums.length;
        int maxSum = Integer.MIN_VALUE;
        int sum = 0;
       
        for(int i=0;i<n;i++){  
            sum +=  nums[i];

            if(maxSum < sum){
                maxSum = sum;
            }
            if(sum < 0){
                sum = 0;
            }
        }
        return maxSum;
    }
}






2.sort the array in order 0,1,2 without using sort method.
Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]


class Solution {
    public void sortColors(int[] nums) {
        int zero = 0;
        int one = 0;
        int two = 0;
       
        for(int i=0;i<nums.length;i++){
             if(nums[i] == 0)
             zero++;
             else if(nums[i] == 1)
             one++;
             else
             two++;
        }

        for(int i=0;i<nums.length;i++){
            if(zero > 0){
                nums[i] = 0;
                zero--;
            }
            else if(one > 0){
                nums[i] = 1;
                one--;
            }
            else{
                nums[i] = 2;
                two--;
            }
        }
    }
}




3.Best time to buy and sell stock
You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

 

Example 1:

Input: prices = [7,1,5,3,6,4]
Output: 5
Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.
Example 2:

Input: prices = [7,6,4,3,1]
Output: 0
Explanation: In this case, no transactions are done and the max profit = 0.


class Solution {
    public int maxProfit(int[] prices) {
        int buy = prices[0];
        int profit = 0;
        for(int i=1;i<prices.length;i++){
            if(buy > prices[i]){
                buy = prices[i];
            }
            else if(prices[i] - buy > profit){
                  profit = prices[i] - buy;
            }
        }
        return profit;
    }
}
